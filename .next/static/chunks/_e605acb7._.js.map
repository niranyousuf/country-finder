{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/skaylark/Documents/Niran/country-finder/components/CountryCard.tsx"],"sourcesContent":["'use client'\n\nimport { useRouter } from 'next/navigation'\nimport Image from 'next/image'\n\ninterface CountryCardProps {\n  country: {\n    name: {\n      common: string\n      official: string\n    }\n    flags: {\n      png: string\n      alt: string\n    }\n    capital: string[]\n    population: number\n    region: string\n  }\n}\n\nexport default function CountryCard({ country }: CountryCardProps) {\n  const router = useRouter()\n\n  return (\n    <div \n      className=\"bg-midnightBlue flex px-6 py-6 rounded-sm shadow-lg overflow-hidden cursor-pointer hover:shadow-xl transition-shadow\"\n      onClick={() => router.push(`/country/${country.name.common}`)}\n    >\n      <div className=\"relative aspect-square w-42 rounded-full overflow-hidden\">\n        <Image\n          src={country.flags.png}\n          alt={country.flags.alt || country.name.common}\n          className=\"object-cover\"\n          fill\n        />\n      </div>\n      <div className=\"pl-4 flex-1 flex flex-col justify-center\">\n        <h2 className=\"text-xl font-bold mb-2\">{country.name.common}</h2>\n        <p><span className=\"font-semibold\">Capital:</span> {country.capital?.[0] || 'N/A'}</p>\n        <p><span className=\"font-semibold\">Population:</span> {country.population.toLocaleString()}</p>\n        <p><span className=\"font-semibold\">Region:</span> {country.region}</p>\n      </div>\n    </div>\n  )\n}"],"names":[],"mappings":";;;;AAEA;AACA;;;AAHA;;;AAqBe,SAAS,YAAY,EAAE,OAAO,EAAoB;;IAC/D,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IAEvB,qBACE,6LAAC;QACC,WAAU;QACV,SAAS,IAAM,OAAO,IAAI,CAAC,CAAC,SAAS,EAAE,QAAQ,IAAI,CAAC,MAAM,EAAE;;0BAE5D,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC,gIAAA,CAAA,UAAK;oBACJ,KAAK,QAAQ,KAAK,CAAC,GAAG;oBACtB,KAAK,QAAQ,KAAK,CAAC,GAAG,IAAI,QAAQ,IAAI,CAAC,MAAM;oBAC7C,WAAU;oBACV,IAAI;;;;;;;;;;;0BAGR,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAG,WAAU;kCAA0B,QAAQ,IAAI,CAAC,MAAM;;;;;;kCAC3D,6LAAC;;0CAAE,6LAAC;gCAAK,WAAU;0CAAgB;;;;;;4BAAe;4BAAE,QAAQ,OAAO,EAAE,CAAC,EAAE,IAAI;;;;;;;kCAC5E,6LAAC;;0CAAE,6LAAC;gCAAK,WAAU;0CAAgB;;;;;;4BAAkB;4BAAE,QAAQ,UAAU,CAAC,cAAc;;;;;;;kCACxF,6LAAC;;0CAAE,6LAAC;gCAAK,WAAU;0CAAgB;;;;;;4BAAc;4BAAE,QAAQ,MAAM;;;;;;;;;;;;;;;;;;;AAIzE;GAxBwB;;QACP,qIAAA,CAAA,YAAS;;;KADF","debugId":null}},
    {"offset": {"line": 137, "column": 0}, "map": {"version":3,"sources":["file:///Users/skaylark/Documents/Niran/country-finder/components/CountryList.tsx"],"sourcesContent":["'use client'\n\nimport { useState, useEffect, useCallback } from 'react'\nimport CountryCard from './CountryCard'\n\ninterface Country {\n  name: {\n    common: string\n    official: string\n  }\n  flags: {\n    png: string\n    alt: string\n  }\n  capital: string[]\n  population: number\n  region: string\n}\n\ninterface CountryListProps {\n  searchTerm: string\n  continent?: string  // Add continent prop\n}\n\nexport default function CountryList({ searchTerm, continent }: CountryListProps) {\n  const [countries, setCountries] = useState<Country[]>([])\n  const [loading, setLoading] = useState(true)\n  const [visibleCount, setVisibleCount] = useState(15)\n\n  const fetchCountries = useCallback(async () => {\n    try {\n      // Use continent-specific endpoint if continent is provided\n      const url = continent\n        ? `https://restcountries.com/v3.1/region/${continent}`\n        : 'https://restcountries.com/v3.1/all'\n      \n      const res = await fetch(url)\n      const data = await res.json()\n      const sortedData = data.sort((a: Country, b: Country) => \n        a.name.common.localeCompare(b.name.common)\n      )\n      setCountries(sortedData)\n    } catch (error) {\n      console.error('Error fetching countries:', error)\n    } finally {\n      setLoading(false)\n    }\n  }, [continent])  // Add continent to dependencies\n\n  useEffect(() => {\n    fetchCountries()\n  }, [fetchCountries])\n\n  const filteredCountries = countries.filter(country => {\n    try {\n      if (!country?.name?.common) return false;\n      return country.name.common.toLowerCase().includes(searchTerm.toLowerCase());\n    } catch (error) {\n      console.error('Error filtering country:', error);\n      return false;\n    }\n  });\n\n  const visibleCountries = filteredCountries.slice(0, visibleCount)\n  const hasMore = visibleCountries.length < filteredCountries.length\n\n  if (loading) return <div className=\"text-center p-8\">Loading...</div>\n\n  return (\n    <div className=\"space-y-8\">\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-3 gap-6\">\n        {visibleCountries.map(country => (\n          <CountryCard key={country.name.common} country={country} />\n        ))}\n      </div>\n      \n      {filteredCountries.length === 0 && (\n        <div className=\"text-center text-gray-500\">\n          No countries found matching your search.\n        </div>\n      )}\n\n      {hasMore && (\n        <div className=\"text-center mt-8\">\n          <button\n            onClick={() => setVisibleCount(prev => prev + 15)}\n            className=\"px-6 py-2 rounded-b-xs border border-smoke bg-smoke text-black cursor-pointer transition-all hover:bg-deepBlue hover:text-smoke duration-300\"\n          >\n            Load More\n          </button>\n        </div>\n      )}\n    </div>\n  )\n}"],"names":[],"mappings":";;;;AAEA;AACA;;;AAHA;;;AAwBe,SAAS,YAAY,EAAE,UAAU,EAAE,SAAS,EAAoB;;IAC7E,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAa,EAAE;IACxD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEjD,MAAM,iBAAiB,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;mDAAE;YACjC,IAAI;gBACF,2DAA2D;gBAC3D,MAAM,MAAM,YACR,CAAC,sCAAsC,EAAE,WAAW,GACpD;gBAEJ,MAAM,MAAM,MAAM,MAAM;gBACxB,MAAM,OAAO,MAAM,IAAI,IAAI;gBAC3B,MAAM,aAAa,KAAK,IAAI;0EAAC,CAAC,GAAY,IACxC,EAAE,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,EAAE,IAAI,CAAC,MAAM;;gBAE3C,aAAa;YACf,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,6BAA6B;YAC7C,SAAU;gBACR,WAAW;YACb;QACF;kDAAG;QAAC;KAAU,EAAG,gCAAgC;;IAEjD,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;iCAAE;YACR;QACF;gCAAG;QAAC;KAAe;IAEnB,MAAM,oBAAoB,UAAU,MAAM,CAAC,CAAA;QACzC,IAAI;YACF,IAAI,CAAC,SAAS,MAAM,QAAQ,OAAO;YACnC,OAAO,QAAQ,IAAI,CAAC,MAAM,CAAC,WAAW,GAAG,QAAQ,CAAC,WAAW,WAAW;QAC1E,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,4BAA4B;YAC1C,OAAO;QACT;IACF;IAEA,MAAM,mBAAmB,kBAAkB,KAAK,CAAC,GAAG;IACpD,MAAM,UAAU,iBAAiB,MAAM,GAAG,kBAAkB,MAAM;IAElE,IAAI,SAAS,qBAAO,6LAAC;QAAI,WAAU;kBAAkB;;;;;;IAErD,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAI,WAAU;0BACZ,iBAAiB,GAAG,CAAC,CAAA,wBACpB,6LAAC,6HAAA,CAAA,UAAW;wBAA2B,SAAS;uBAA9B,QAAQ,IAAI,CAAC,MAAM;;;;;;;;;;YAIxC,kBAAkB,MAAM,KAAK,mBAC5B,6LAAC;gBAAI,WAAU;0BAA4B;;;;;;YAK5C,yBACC,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBACC,SAAS,IAAM,gBAAgB,CAAA,OAAQ,OAAO;oBAC9C,WAAU;8BACX;;;;;;;;;;;;;;;;;AAOX;GAtEwB;KAAA","debugId":null}},
    {"offset": {"line": 261, "column": 0}, "map": {"version":3,"sources":["file:///Users/skaylark/Documents/Niran/country-finder/app/countries/page.tsx"],"sourcesContent":["'use client'\n\nimport { useState } from 'react'\nimport CountryList from '@/components/CountryList'\n\nexport default function CountriesPage() {\n  const [searchTerm, setSearchTerm] = useState('')\n\n  return (\n    <div className=\"min-h-screen\">\n      <div className=\"container mx-auto px-4 py-8\">\n        <h1 className=\"text-4xl font-bold text-center mb-8\">All Countries</h1>\n        \n        <div className=\"max-w-md mx-auto mb-12\">\n          <input\n            type=\"text\"\n            placeholder=\"Search countries...\"\n            className=\"w-full px-4 py-2 rounded-sm border border-gray-300 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n          />\n        </div>\n\n        <CountryList searchTerm={searchTerm} />\n      </div>\n    </div>\n  )\n}"],"names":[],"mappings":";;;;AAEA;AACA;;;AAHA;;;AAKe,SAAS;;IACtB,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAE7C,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAG,WAAU;8BAAsC;;;;;;8BAEpD,6LAAC;oBAAI,WAAU;8BACb,cAAA,6LAAC;wBACC,MAAK;wBACL,aAAY;wBACZ,WAAU;wBACV,OAAO;wBACP,UAAU,CAAC,IAAM,cAAc,EAAE,MAAM,CAAC,KAAK;;;;;;;;;;;8BAIjD,6LAAC,6HAAA,CAAA,UAAW;oBAAC,YAAY;;;;;;;;;;;;;;;;;AAIjC;GAtBwB;KAAA","debugId":null}}]
}